// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select basic 1`] = `
.c8 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c8 *[stroke*="#"],
.c8 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*="#"],
.c8 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 0;
  padding: 0;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  margin: 0;
  padding: 0;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-left: 12px;
  margin-right: 12px;
  padding: 0;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  border: none;
  -webkit-appearance: none;
  padding: 11px;
  outline: none;
  background: transparent;
  color: inherit;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  width: 100%;
  border: none;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c5 {
  cursor: pointer;
}

.c1 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:699px) {
  .c2 {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .c2 {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .c3 {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .c3 {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width:699px) {
  .c7 {
    padding: 0;
  }
}

@media only screen and (min-width:700px) {
  .c0 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<button
  aria-label="Open Drop"
  className="c0"
  disabled={false}
  id="test-select"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  type="button"
>
  <div
    className="c1 c2"
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <input
          autoComplete="off"
          className="c5 c6"
          id="test-select__input"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onInput={[Function]}
          onKeyDown={[Function]}
          readOnly={true}
          tabIndex="-1"
          type="text"
        />
      </div>
    </div>
    <div
      className="c7"
      style={
        Object {
          "minWidth": "auto",
        }
      }
    >
      <svg
        aria-label="FormDown"
        className="c8"
        color="#7D4CDB"
        height="24px"
        role="img"
        version="1.1"
        viewBox="0 0 24 24"
        width="24px"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          strokeWidth="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select complex options and children 1`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-qbvYY jZaTeL"
  id="test-select"
  type="button"
>
  <div
    class="Select__StyledSelectBox-iWRdOc eXFape StyledBox-YaZNy flHrpn"
  >
    <div
      class="StyledBox-YaZNy eMTjTC"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-gOoAsL egTPoR"
      >
        <input
          autocomplete="off"
          class="Select__SelectTextInput-eJgcSa nKUgh StyledTextInput-bqUxsy dEiFmx"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="StyledBox-YaZNy ivAcfG"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-kFlXVF eheoxD"
        color="#7D4CDB"
        height="24px"
        role="img"
        version="1.1"
        viewBox="0 0 24 24"
        width="24px"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select complex options and children 2`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-qbvYY jZaTeL"
  id="test-select"
  type="button"
>
  <div
    class="Select__StyledSelectBox-iWRdOc eXFape StyledBox-YaZNy flHrpn"
  >
    <div
      class="StyledBox-YaZNy eMTjTC"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-gOoAsL egTPoR"
      >
        <input
          autocomplete="off"
          class="Select__SelectTextInput-eJgcSa nKUgh StyledTextInput-bqUxsy dEiFmx"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="StyledBox-YaZNy ivAcfG"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-kFlXVF eheoxD"
        color="#7D4CDB"
        height="24px"
        role="img"
        version="1.1"
        viewBox="0 0 24 24"
        width="24px"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select complex options and children 3`] = `
<div
  class="StyledDrop-czaYBK lgQIaN"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="SelectContainer__ContainerBox-cmlGXd bCcYNq StyledBox-YaZNy hQeqTY"
    id="test-select__select-drop"
  >
    <div
      class="SelectContainer__OptionsBox-ivZYuf dsVoEJ StyledBox-YaZNy biNMpn"
      role="menubar"
      tabindex="-1"
    >
      <div
        class="StyledBox-YaZNy ckMYwJ"
      >
        <button
          class="StyledButton-qbvYY eEPhap"
          role="menuitem"
          type="button"
        >
          <span>
            one
          </span>
        </button>
      </div>
      <div
        class="StyledBox-YaZNy ckMYwJ"
      >
        <button
          class="StyledButton-qbvYY eEPhap"
          role="menuitem"
          type="button"
        >
          <span>
            two
          </span>
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Select complex options and children 4`] = `
"@media only screen and (max-width:699px) {
  .flHrpn {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .flHrpn {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .eMTjTC {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .eMTjTC {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .ivAcfG {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width:699px) {
  .ivAcfG {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .hQeqTY {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .hQeqTY {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .biNMpn {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .biNMpn {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .ckMYwJ {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .ckMYwJ {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .hZNqBU {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .hZNqBU {
    padding: 6px;
  }
}

@media only screen and (min-width:700px) {
  .jZaTeL {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

@media only screen and (min-width:700px) {
  .eEPhap {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}



.lgQIaN {
  font-size: 18px;
  line-height: 24px;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  box-shadow: 0px 3px 8px rgba(100,100,100,0.50);
  position: fixed;
  z-index: 20;
  outline: none;
  background: #ffffff;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: jNdvGQ 0.1s forwards;
  animation: jNdvGQ 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .lgQIaN {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .bCcYNq {
    width: 100%;
  }
}"
`;

exports[`Select deselect an option 1`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-qbvYY jZaTeL"
  id="test-select"
  type="button"
>
  <div
    class="Select__StyledSelectBox-iWRdOc eXFape StyledBox-YaZNy flHrpn"
  >
    <div
      class="StyledBox-YaZNy eMTjTC"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-gOoAsL egTPoR"
      >
        <input
          autocomplete="off"
          class="Select__SelectTextInput-eJgcSa nKUgh StyledTextInput-bqUxsy dEiFmx"
          id="test-select__input"
          multiple=""
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value="one"
        />
      </div>
    </div>
    <div
      class="StyledBox-YaZNy ivAcfG"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-kFlXVF eheoxD"
        color="#7D4CDB"
        height="24px"
        role="img"
        version="1.1"
        viewBox="0 0 24 24"
        width="24px"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select disabled 1`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-qbvYY fILeAh"
  disabled=""
  id="test-select"
  type="button"
>
  <div
    class="Select__StyledSelectBox-iWRdOc eXFape StyledBox-YaZNy flHrpn"
  >
    <div
      class="StyledBox-YaZNy eMTjTC"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-gOoAsL egTPoR"
      >
        <input
          autocomplete="off"
          class="Select__SelectTextInput-eJgcSa nKUgh StyledTextInput-bqUxsy dEiFmx"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="StyledBox-YaZNy ivAcfG"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-kFlXVF eheoxD"
        color="#7D4CDB"
        height="24px"
        role="img"
        version="1.1"
        viewBox="0 0 24 24"
        width="24px"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select disabled 2`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-qbvYY fILeAh"
  disabled=""
  id="test-select"
  type="button"
>
  <div
    class="Select__StyledSelectBox-iWRdOc eXFape StyledBox-YaZNy flHrpn"
  >
    <div
      class="StyledBox-YaZNy eMTjTC"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-gOoAsL egTPoR"
      >
        <input
          autocomplete="off"
          class="Select__SelectTextInput-eJgcSa nKUgh StyledTextInput-bqUxsy dEiFmx"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="StyledBox-YaZNy ivAcfG"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-kFlXVF eheoxD"
        color="#7D4CDB"
        height="24px"
        role="img"
        version="1.1"
        viewBox="0 0 24 24"
        width="24px"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select multiple 1`] = `
.c8 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c8 *[stroke*="#"],
.c8 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*="#"],
.c8 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 0;
  padding: 0;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  margin: 0;
  padding: 0;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-left: 12px;
  margin-right: 12px;
  padding: 0;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  border: none;
  -webkit-appearance: none;
  padding: 11px;
  outline: none;
  background: transparent;
  color: inherit;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  width: 100%;
  border: none;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c5 {
  cursor: pointer;
}

.c1 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:699px) {
  .c2 {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .c2 {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .c3 {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .c3 {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width:699px) {
  .c7 {
    padding: 0;
  }
}

@media only screen and (min-width:700px) {
  .c0 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<button
  aria-label="Open Drop"
  className="c0"
  disabled={false}
  id="test-select"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  type="button"
>
  <div
    className="c1 c2"
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <input
          autoComplete="off"
          className="c5 c6"
          id="test-select__input"
          multiple={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onInput={[Function]}
          onKeyDown={[Function]}
          readOnly={true}
          selected={Array []}
          tabIndex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      className="c7"
      style={
        Object {
          "minWidth": "auto",
        }
      }
    >
      <svg
        aria-label="FormDown"
        className="c8"
        color="#7D4CDB"
        height="24px"
        role="img"
        version="1.1"
        viewBox="0 0 24 24"
        width="24px"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          strokeWidth="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select multiple values 1`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-qbvYY jZaTeL"
  id="test-select"
  type="button"
>
  <div
    class="Select__StyledSelectBox-iWRdOc eXFape StyledBox-YaZNy flHrpn"
  >
    <div
      class="StyledBox-YaZNy eMTjTC"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-gOoAsL egTPoR"
      >
        <input
          autocomplete="off"
          class="Select__SelectTextInput-eJgcSa nKUgh StyledTextInput-bqUxsy dEiFmx"
          id="test-select__input"
          multiple=""
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value="multiple"
        />
      </div>
    </div>
    <div
      class="StyledBox-YaZNy ivAcfG"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-kFlXVF eheoxD"
        color="#7D4CDB"
        height="24px"
        role="img"
        version="1.1"
        viewBox="0 0 24 24"
        width="24px"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select multiple values 2`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-qbvYY jZaTeL"
  id="test-select"
  type="button"
>
  <div
    class="Select__StyledSelectBox-iWRdOc eXFape StyledBox-YaZNy flHrpn"
  >
    <div
      class="StyledBox-YaZNy eMTjTC"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-gOoAsL egTPoR"
      >
        <input
          autocomplete="off"
          class="Select__SelectTextInput-eJgcSa nKUgh StyledTextInput-bqUxsy dEiFmx"
          id="test-select__input"
          multiple=""
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value="multiple"
        />
      </div>
    </div>
    <div
      class="StyledBox-YaZNy ivAcfG"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-kFlXVF eheoxD"
        color="#7D4CDB"
        height="24px"
        role="img"
        version="1.1"
        viewBox="0 0 24 24"
        width="24px"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select multiple values 3`] = `
<div
  class="StyledDrop-czaYBK lgQIaN"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="SelectContainer__ContainerBox-cmlGXd bCcYNq StyledBox-YaZNy hQeqTY"
    id="test-select__select-drop"
  >
    <div
      class="SelectContainer__OptionsBox-ivZYuf dsVoEJ StyledBox-YaZNy biNMpn"
      role="menubar"
      tabindex="-1"
    >
      <div
        class="StyledBox-YaZNy ckMYwJ"
      >
        <button
          class="StyledButton-qbvYY dZSKYq"
          role="menuitem"
          type="button"
        >
          <div
            class="StyledBox-YaZNy hZNqBU"
          >
            <span
              class="StyledText-dmaDlZ kKQAW"
            >
              one
            </span>
          </div>
        </button>
      </div>
      <div
        class="StyledBox-YaZNy ckMYwJ"
      >
        <button
          class="StyledButton-qbvYY dZSKYq"
          role="menuitem"
          type="button"
        >
          <div
            class="StyledBox-YaZNy hZNqBU"
          >
            <span
              class="StyledText-dmaDlZ kKQAW"
            >
              two
            </span>
          </div>
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Select multiple values 4`] = `
"@media only screen and (max-width:699px) {
  .flHrpn {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .flHrpn {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .eMTjTC {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .eMTjTC {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .ivAcfG {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width:699px) {
  .ivAcfG {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .hQeqTY {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .hQeqTY {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .biNMpn {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .biNMpn {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .ckMYwJ {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .ckMYwJ {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .hZNqBU {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .hZNqBU {
    padding: 6px;
  }
}

@media only screen and (max-width:699px) {
  .gynikh {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .gynikh {
    padding: 3px;
  }
}

@media only screen and (min-width:700px) {
  .jZaTeL {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

@media only screen and (min-width:700px) {
  .eEPhap {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

@media only screen and (min-width:700px) {
  .dZSKYq {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}



.lgQIaN {
  font-size: 18px;
  line-height: 24px;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  box-shadow: 0px 3px 8px rgba(100,100,100,0.50);
  position: fixed;
  z-index: 20;
  outline: none;
  background: #ffffff;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: jNdvGQ 0.1s forwards;
  animation: jNdvGQ 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .lgQIaN {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .bCcYNq {
    width: 100%;
  }
}"
`;

exports[`Select opens 1`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-qbvYY jZaTeL"
  id="test-select"
  type="button"
>
  <div
    class="Select__StyledSelectBox-iWRdOc eXFape StyledBox-YaZNy flHrpn"
  >
    <div
      class="StyledBox-YaZNy eMTjTC"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-gOoAsL egTPoR"
      >
        <input
          autocomplete="off"
          class="Select__SelectTextInput-eJgcSa nKUgh StyledTextInput-bqUxsy dEiFmx"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="StyledBox-YaZNy ivAcfG"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-kFlXVF eheoxD"
        color="#7D4CDB"
        height="24px"
        role="img"
        version="1.1"
        viewBox="0 0 24 24"
        width="24px"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select opens 2`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-qbvYY jZaTeL"
  id="test-select"
  type="button"
>
  <div
    class="Select__StyledSelectBox-iWRdOc eXFape StyledBox-YaZNy flHrpn"
  >
    <div
      class="StyledBox-YaZNy eMTjTC"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-gOoAsL egTPoR"
      >
        <input
          autocomplete="off"
          class="Select__SelectTextInput-eJgcSa nKUgh StyledTextInput-bqUxsy dEiFmx"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="StyledBox-YaZNy ivAcfG"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-kFlXVF eheoxD"
        color="#7D4CDB"
        height="24px"
        role="img"
        version="1.1"
        viewBox="0 0 24 24"
        width="24px"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select opens 3`] = `
<div
  class="StyledDrop-czaYBK lgQIaN"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="SelectContainer__ContainerBox-cmlGXd bCcYNq StyledBox-YaZNy hQeqTY"
    id="test-select__select-drop"
  >
    <div
      class="SelectContainer__OptionsBox-ivZYuf dsVoEJ StyledBox-YaZNy biNMpn"
      role="menubar"
      tabindex="-1"
    >
      <div
        class="StyledBox-YaZNy ckMYwJ"
      >
        <button
          class="StyledButton-qbvYY eEPhap"
          role="menuitem"
          type="button"
        >
          <div
            class="StyledBox-YaZNy hZNqBU"
          >
            <span
              class="StyledText-dmaDlZ kKQAW"
            >
              one
            </span>
          </div>
        </button>
      </div>
      <div
        class="StyledBox-YaZNy ckMYwJ"
      >
        <button
          class="StyledButton-qbvYY eEPhap"
          role="menuitem"
          type="button"
        >
          <div
            class="StyledBox-YaZNy hZNqBU"
          >
            <span
              class="StyledText-dmaDlZ kKQAW"
            >
              two
            </span>
          </div>
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Select opens 4`] = `
"@media only screen and (max-width:699px) {
  .flHrpn {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .flHrpn {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .eMTjTC {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .eMTjTC {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .ivAcfG {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width:699px) {
  .ivAcfG {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .hQeqTY {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .hQeqTY {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .biNMpn {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .biNMpn {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .ckMYwJ {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .ckMYwJ {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .hZNqBU {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .hZNqBU {
    padding: 6px;
  }
}

@media only screen and (min-width:700px) {
  .jZaTeL {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

@media only screen and (min-width:700px) {
  .eEPhap {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}



.lgQIaN {
  font-size: 18px;
  line-height: 24px;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  box-shadow: 0px 3px 8px rgba(100,100,100,0.50);
  position: fixed;
  z-index: 20;
  outline: none;
  background: #ffffff;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: jNdvGQ 0.1s forwards;
  animation: jNdvGQ 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .lgQIaN {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .bCcYNq {
    width: 100%;
  }
}"
`;

exports[`Select opens 5`] = `
<div
  class="SelectContainer__OptionsBox-ivZYuf dsVoEJ StyledBox-YaZNy biNMpn"
  role="menubar"
  tabindex="-1"
>
  <div
    class="StyledBox-YaZNy ckMYwJ"
  >
    <button
      class="StyledButton-qbvYY eEPhap"
      role="menuitem"
      type="button"
    >
      <div
        class="StyledBox-YaZNy hZNqBU"
      >
        <span
          class="StyledText-dmaDlZ kKQAW"
        >
          one
        </span>
      </div>
    </button>
  </div>
  <div
    class="StyledBox-YaZNy ckMYwJ"
  >
    <button
      class="StyledButton-qbvYY eEPhap"
      role="menuitem"
      type="button"
    >
      <div
        class="StyledBox-YaZNy hZNqBU"
      >
        <span
          class="StyledText-dmaDlZ kKQAW"
        >
          two
        </span>
      </div>
    </button>
  </div>
</div>
`;

exports[`Select search 1`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-qbvYY jZaTeL"
  id="test-select"
  type="button"
>
  <div
    class="Select__StyledSelectBox-iWRdOc eXFape StyledBox-YaZNy flHrpn"
  >
    <div
      class="StyledBox-YaZNy eMTjTC"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-gOoAsL egTPoR"
      >
        <input
          autocomplete="off"
          class="Select__SelectTextInput-eJgcSa nKUgh StyledTextInput-bqUxsy dEiFmx"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="StyledBox-YaZNy ivAcfG"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-kFlXVF eheoxD"
        color="#7D4CDB"
        height="24px"
        role="img"
        version="1.1"
        viewBox="0 0 24 24"
        width="24px"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select search 2`] = `
<div
  class="StyledDrop-czaYBK lgQIaN"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="SelectContainer__ContainerBox-cmlGXd bCcYNq StyledBox-YaZNy hQeqTY"
    id="test-select__select-drop"
  >
    <div
      class="StyledBox-YaZNy gynikh"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-gOoAsL egTPoR"
      >
        <input
          autocomplete="off"
          class="StyledTextInput-bqUxsy kbUIna"
          type="search"
          value=""
        />
      </div>
    </div>
    <div
      class="SelectContainer__OptionsBox-ivZYuf dsVoEJ StyledBox-YaZNy biNMpn"
      role="menubar"
      tabindex="-1"
    >
      <div
        class="StyledBox-YaZNy ckMYwJ"
      >
        <button
          class="StyledButton-qbvYY eEPhap"
          role="menuitem"
          type="button"
        >
          <div
            class="StyledBox-YaZNy hZNqBU"
          >
            <span
              class="StyledText-dmaDlZ kKQAW"
            >
              one
            </span>
          </div>
        </button>
      </div>
      <div
        class="StyledBox-YaZNy ckMYwJ"
      >
        <button
          class="StyledButton-qbvYY eEPhap"
          role="menuitem"
          type="button"
        >
          <div
            class="StyledBox-YaZNy hZNqBU"
          >
            <span
              class="StyledText-dmaDlZ kKQAW"
            >
              two
            </span>
          </div>
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Select search 3`] = `
"@media only screen and (max-width:699px) {
  .flHrpn {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .flHrpn {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .eMTjTC {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .eMTjTC {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .ivAcfG {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width:699px) {
  .ivAcfG {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .hQeqTY {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .hQeqTY {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .biNMpn {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .biNMpn {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .ckMYwJ {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .ckMYwJ {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .hZNqBU {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .hZNqBU {
    padding: 6px;
  }
}

@media only screen and (max-width:699px) {
  .gynikh {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .gynikh {
    padding: 3px;
  }
}

@media only screen and (min-width:700px) {
  .jZaTeL {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

@media only screen and (min-width:700px) {
  .eEPhap {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}



.lgQIaN {
  font-size: 18px;
  line-height: 24px;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  box-shadow: 0px 3px 8px rgba(100,100,100,0.50);
  position: fixed;
  z-index: 20;
  outline: none;
  background: #ffffff;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: jNdvGQ 0.1s forwards;
  animation: jNdvGQ 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .lgQIaN {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .bCcYNq {
    width: 100%;
  }
}"
`;

exports[`Select select an option 1`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-qbvYY jZaTeL"
  id="test-select"
  type="button"
>
  <div
    class="Select__StyledSelectBox-iWRdOc eXFape StyledBox-YaZNy flHrpn"
  >
    <div
      class="StyledBox-YaZNy eMTjTC"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-gOoAsL egTPoR"
      >
        <input
          autocomplete="off"
          class="Select__SelectTextInput-eJgcSa nKUgh StyledTextInput-bqUxsy dEiFmx"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="StyledBox-YaZNy ivAcfG"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-kFlXVF eheoxD"
        color="#7D4CDB"
        height="24px"
        role="img"
        version="1.1"
        viewBox="0 0 24 24"
        width="24px"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select select an option with complex options 1`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-qbvYY jZaTeL"
  id="test-select"
  type="button"
>
  <div
    class="Select__StyledSelectBox-iWRdOc czusRE StyledBox-YaZNy flHrpn"
  >
    <div
      class="StyledBox-YaZNy eMTjTC"
    >
      <span>
        one
      </span>
    </div>
    <div
      class="StyledBox-YaZNy ivAcfG"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-kFlXVF eheoxD"
        color="#7D4CDB"
        height="24px"
        role="img"
        version="1.1"
        viewBox="0 0 24 24"
        width="24px"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select select an option with enter 1`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-qbvYY jZaTeL"
  id="test-select"
  type="button"
>
  <div
    class="Select__StyledSelectBox-iWRdOc eXFape StyledBox-YaZNy flHrpn"
  >
    <div
      class="StyledBox-YaZNy eMTjTC"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-gOoAsL egTPoR"
      >
        <input
          autocomplete="off"
          class="Select__SelectTextInput-eJgcSa nKUgh StyledTextInput-bqUxsy dEiFmx"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="StyledBox-YaZNy ivAcfG"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-kFlXVF eheoxD"
        color="#7D4CDB"
        height="24px"
        role="img"
        version="1.1"
        viewBox="0 0 24 24"
        width="24px"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select select another option 1`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-qbvYY jZaTeL"
  id="test-select"
  type="button"
>
  <div
    class="Select__StyledSelectBox-iWRdOc eXFape StyledBox-YaZNy flHrpn"
  >
    <div
      class="StyledBox-YaZNy eMTjTC"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-gOoAsL egTPoR"
      >
        <input
          autocomplete="off"
          class="Select__SelectTextInput-eJgcSa nKUgh StyledTextInput-bqUxsy dEiFmx"
          id="test-select__input"
          multiple=""
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value="two"
        />
      </div>
    </div>
    <div
      class="StyledBox-YaZNy ivAcfG"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-kFlXVF eheoxD"
        color="#7D4CDB"
        height="24px"
        role="img"
        version="1.1"
        viewBox="0 0 24 24"
        width="24px"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select size 1`] = `
.c8 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 48px;
  height: 48px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c8 *[stroke*="#"],
.c8 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*="#"],
.c8 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 0;
  padding: 0;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  margin: 0;
  padding: 0;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-left: 12px;
  margin-right: 12px;
  padding: 0;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  border: none;
  -webkit-appearance: none;
  padding: 11px;
  outline: none;
  background: transparent;
  color: inherit;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  width: 100%;
  font-size: 22px;
  line-height: 28px;
  border: none;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c5 {
  cursor: pointer;
}

.c1 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:699px) {
  .c2 {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .c2 {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .c3 {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .c3 {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width:699px) {
  .c7 {
    padding: 0;
  }
}

@media only screen and (min-width:700px) {
  .c0 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<button
  aria-label="Open Drop"
  className="c0"
  disabled={false}
  id="test-select"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  type="button"
>
  <div
    className="c1 c2"
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <input
          autoComplete="off"
          className="c5 c6"
          id="test-select__input"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onInput={[Function]}
          onKeyDown={[Function]}
          readOnly={true}
          selected={Array []}
          size="large"
          tabIndex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      className="c7"
      style={
        Object {
          "minWidth": "auto",
        }
      }
    >
      <svg
        aria-label="FormDown"
        className="c8"
        color="#7D4CDB"
        height="24px"
        role="img"
        size="large"
        version="1.1"
        viewBox="0 0 24 24"
        width="24px"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          strokeWidth="2"
        />
      </svg>
    </div>
  </div>
</button>
`;
