// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button accent renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c2:first-child:not(:last-child) {
  margin-right: 12px;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #865CD6;
  border-radius: 5px;
  color: #333333;
  text-align: center;
  display: inline-block;
  min-width: 96px;
  max-width: 384px;
  font-weight: 600;
  font-size: 1.1875rem;
  line-height: 24px;
  padding: 10px 10px;
  border-color: #00CCEB;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #00CCEB;
}

.c1:hover svg {
  fill: #000000;
  stroke: #000000;
  -webkit-transition: none;
  transition: none;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={false}
    href={undefined}
    icon={undefined}
    label="Test"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  >
    <span
      className="c2"
    >
      Test
    </span>
  </button>
</div>
`;

exports[`Button critical renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c2:first-child:not(:last-child) {
  margin-right: 12px;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #865CD6;
  border-radius: 5px;
  color: #333333;
  text-align: center;
  display: inline-block;
  min-width: 96px;
  max-width: 384px;
  font-weight: 600;
  font-size: 1.1875rem;
  line-height: 24px;
  padding: 10px 10px;
  border-color: #FF324D;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #FF324D;
}

.c1:hover svg {
  fill: #000000;
  stroke: #000000;
  -webkit-transition: none;
  transition: none;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={false}
    href={undefined}
    icon={undefined}
    label="Test"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  >
    <span
      className="c2"
    >
      Test
    </span>
  </button>
</div>
`;

exports[`Button disabled renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #865CD6;
  border-radius: 5px;
  color: #333333;
  text-align: center;
  display: inline-block;
  min-width: 96px;
  max-width: 384px;
  font-weight: 600;
  opacity: 0.3;
  cursor: default;
  font-size: 1.1875rem;
  line-height: 24px;
  padding: 10px 10px;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={true}
    href={undefined}
    icon={undefined}
    label={undefined}
    onBlur={[Function]}
    onClick={undefined}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  />
</div>
`;

exports[`Button focus renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c2:first-child:not(:last-child) {
  margin-right: 12px;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #865CD6;
  border-radius: 5px;
  color: #333333;
  text-align: center;
  display: inline-block;
  min-width: 96px;
  max-width: 384px;
  font-weight: 600;
  font-size: 1.1875rem;
  line-height: 24px;
  padding: 10px 10px;
  border-color: #00CCEB;
  box-shadow: 0 0 2px 2px #00CCEB;
}

.c1 > circle,
.c1 > ellipse,
.c1 > line,
.c1 > path,
.c1 > polygon,
.c1 > polyline,
.c1 > rect {
  outline: #00CCEB solid 2px;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={false}
    href={undefined}
    icon={undefined}
    label="Test"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  >
    <span
      className="c2"
    >
      Test
    </span>
  </button>
</div>
`;

exports[`Button hoverIndicator as object renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
}

.c1:hover {
  background-color: rgba(221,221,221,0.5);
  color: #000000;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={false}
    href={undefined}
    icon={undefined}
    label={undefined}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button hoverIndicator as object with color renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
}

.c1:hover {
  background-color: rgba(134,92,214,0.3);
  color: #000000;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={false}
    href={undefined}
    icon={undefined}
    label={undefined}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button hoverIndicator as object with colorIndex renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
}

.c1:hover {
  background-color: rgba(0,204,235,0.3);
  color: #000000;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={false}
    href={undefined}
    icon={undefined}
    label={undefined}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button hoverIndicator as object with invalid color renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
}

.c1:hover {
  background-color: rgba(221,221,221,0.5);
  color: #000000;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={false}
    href={undefined}
    icon={undefined}
    label={undefined}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button hoverIndicator as object with invalid color renders 2`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
}

.c1:hover {
  background-color: rgba(221,221,221,0.5);
  color: #000000;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={false}
    href={undefined}
    icon={undefined}
    label={undefined}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button hoverIndicator as object with invalid colorIndex renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
}

.c1:hover {
  background-color: rgba(221,221,221,0.5);
  color: #000000;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={false}
    href={undefined}
    icon={undefined}
    label={undefined}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button hoverIndicator renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
}

.c1:hover {
  background-color: rgba(221,221,221,0.5);
  color: #000000;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={false}
    href={undefined}
    icon={undefined}
    label={undefined}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button href renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #865CD6;
  border-radius: 5px;
  color: #333333;
  text-align: center;
  display: inline-block;
  min-width: 96px;
  max-width: 384px;
  font-weight: 600;
  font-size: 1.1875rem;
  line-height: 24px;
  padding: 10px 10px;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #865CD6;
}

.c1:hover svg {
  fill: #000000;
  stroke: #000000;
  -webkit-transition: none;
  transition: none;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <a
    aria-label={undefined}
    className="c1"
    disabled={false}
    href="test"
    icon={undefined}
    label={undefined}
    onBlur={[Function]}
    onClick={undefined}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type={undefined}
  />
</div>
`;

exports[`Button icon label renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c3:first-child:not(:last-child) {
  margin-right: 12px;
}

.c2 {
  display: inline-block;
}

.c2:first-child:not(:last-child) {
  margin-right: 12px;
}

.c2 > * {
  vertical-align: bottom;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #865CD6;
  border-radius: 5px;
  color: #333333;
  text-align: center;
  display: inline-block;
  min-width: 96px;
  max-width: 384px;
  font-weight: 600;
  font-size: 1.1875rem;
  line-height: 24px;
  padding: 10px 10px;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #865CD6;
}

.c1:hover svg {
  fill: #000000;
  stroke: #000000;
  -webkit-transition: none;
  transition: none;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={false}
    href={undefined}
    icon={<svg />}
    label="Test"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  >
    <span
      aria-hidden={true}
      className="c2"
    >
      <svg />
    </span>
    <span
      className="c3"
    >
      Test
    </span>
  </button>
</div>
`;

exports[`Button primary renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c2:first-child:not(:last-child) {
  margin-right: 12px;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #865CD6;
  border-radius: 5px;
  color: #333333;
  text-align: center;
  display: inline-block;
  min-width: 96px;
  max-width: 384px;
  font-weight: 600;
  font-size: 1.1875rem;
  line-height: 24px;
  padding: 10px 10px;
  background-color: #865CD6;
  color: #FFFFFF;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #865CD6;
}

.c1 svg {
  fill: #FFFFFF;
  stroke: #FFFFFF;
  -webkit-transition: none;
  transition: none;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={false}
    href={undefined}
    icon={undefined}
    label="Test"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  >
    <span
      className="c2"
    >
      Test
    </span>
  </button>
</div>
`;

exports[`Button renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c2:first-child:not(:last-child) {
  margin-right: 12px;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #865CD6;
  border-radius: 5px;
  color: #333333;
  text-align: center;
  display: inline-block;
  min-width: 96px;
  max-width: 384px;
  font-weight: 600;
  font-size: 1.1875rem;
  line-height: 24px;
  padding: 10px 10px;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #865CD6;
}

.c1:hover svg {
  fill: #000000;
  stroke: #000000;
  -webkit-transition: none;
  transition: none;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={false}
    href={undefined}
    icon={undefined}
    label="Test"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  >
    <span
      className="c2"
    >
      Test
    </span>
  </button>
</div>
`;

exports[`Button reverse icon label renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c2:first-child:not(:last-child) {
  margin-right: 12px;
}

.c3 {
  display: inline-block;
}

.c3:first-child:not(:last-child) {
  margin-right: 12px;
}

.c3 > * {
  vertical-align: bottom;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #865CD6;
  border-radius: 5px;
  color: #333333;
  text-align: center;
  display: inline-block;
  min-width: 96px;
  max-width: 384px;
  font-weight: 600;
  font-size: 1.1875rem;
  line-height: 24px;
  padding: 10px 10px;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #865CD6;
}

.c1:hover svg {
  fill: #000000;
  stroke: #000000;
  -webkit-transition: none;
  transition: none;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={false}
    href={undefined}
    icon={<svg />}
    label="Test"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  >
    <span
      className="c2"
    >
      Test
    </span>
    <span
      aria-hidden={true}
      className="c3"
    >
      <svg />
    </span>
  </button>
</div>
`;

exports[`Button secondary renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c2:first-child:not(:last-child) {
  margin-right: 12px;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #865CD6;
  border-radius: 5px;
  color: #333333;
  text-align: center;
  display: inline-block;
  min-width: 96px;
  max-width: 384px;
  font-weight: 600;
  font-size: 1.1875rem;
  line-height: 24px;
  padding: 10px 10px;
  border-color: #DC2878;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #DC2878;
}

.c1:hover svg {
  fill: #000000;
  stroke: #000000;
  -webkit-transition: none;
  transition: none;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={false}
    href={undefined}
    icon={undefined}
    label="Test"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  >
    <span
      className="c2"
    >
      Test
    </span>
  </button>
</div>
`;

exports[`Button warns about invalid icon render 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c2 {
  display: inline-block;
}

.c2:first-child:not(:last-child) {
  margin-right: 12px;
}

.c2 > * {
  vertical-align: bottom;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
  padding: 12px;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={false}
    href={undefined}
    icon={<svg />}
    label={undefined}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  >
    <span
      aria-hidden={true}
      className="c2"
    >
      <svg />
    </span>
  </button>
</div>
`;

exports[`Button warns about invalid label render 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c2:first-child:not(:last-child) {
  margin-right: 12px;
}

.c1 {
  cursor: pointer;
  outline: none;
  font: inherit;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
}

@media only screen and (min-width:700px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    aria-label={undefined}
    className="c1"
    disabled={false}
    href={undefined}
    icon={undefined}
    label="Test"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    tabIndex="0"
    type="button"
  >
    <span
      className="c2"
    >
      Test
    </span>
  </button>
</div>
`;
