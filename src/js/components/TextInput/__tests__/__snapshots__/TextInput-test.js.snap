// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInput calls onInput when input changes 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c1 {
  padding: 11px;
  border: 1px solid rgba(0,0,0,0.15);
  border-radius: 4px;
  outline: none;
  background-color: transparent;
  color: inherit;
  font: inherit;
  margin: 0;
}

.c1::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c1::-moz-placeholder {
  color: #AAAAAA;
}

.c1:-ms-input-placeholder {
  color: #AAAAAA;
}

.c1::-moz-focus-inner {
  border: none;
  outline: none;
}

.c1:focus {
  border-color: #00CCEB;
  box-shadow: 0 0 1px 1px #00CCEB;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: #00CCEB solid 2px;
}

@media only screen and (min-width:481px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

<div
  className="c0"
>
  <div>
    <input
      autoComplete="off"
      className="c1"
      defaultValue={undefined}
      id="item"
      name="item"
      onBlur={[Function]}
      onFocus={[Function]}
      onInput={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseUp={[Function]}
      value={undefined}
    />
  </div>
</div>
`;

exports[`TextInput handles next and previous without suggestion 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c1 {
  padding: 11px;
  border: 1px solid rgba(0,0,0,0.15);
  border-radius: 4px;
  outline: none;
  background-color: transparent;
  color: inherit;
  font: inherit;
  margin: 0;
}

.c1::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c1::-moz-placeholder {
  color: #AAAAAA;
}

.c1:-ms-input-placeholder {
  color: #AAAAAA;
}

.c1::-moz-focus-inner {
  border: none;
  outline: none;
}

.c1:focus {
  border-color: #00CCEB;
  box-shadow: 0 0 1px 1px #00CCEB;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: #00CCEB solid 2px;
}

@media only screen and (min-width:481px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

<div
  className="c0"
>
  <div>
    <input
      autoComplete="off"
      className="c1"
      defaultValue={undefined}
      id="item"
      name="item"
      onBlur={[Function]}
      onFocus={[Function]}
      onInput={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseUp={[Function]}
      value={undefined}
    />
  </div>
</div>
`;

exports[`TextInput renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c1 {
  padding: 11px;
  border: 1px solid rgba(0,0,0,0.15);
  border-radius: 4px;
  outline: none;
  background-color: transparent;
  color: inherit;
  font: inherit;
  margin: 0;
}

.c1::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c1::-moz-placeholder {
  color: #AAAAAA;
}

.c1:-ms-input-placeholder {
  color: #AAAAAA;
}

.c1::-moz-focus-inner {
  border: none;
  outline: none;
}

.c1:focus {
  border-color: #00CCEB;
  box-shadow: 0 0 1px 1px #00CCEB;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: #00CCEB solid 2px;
}

@media only screen and (min-width:481px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

<div
  className="c0"
>
  <div>
    <input
      autoComplete="off"
      className="c1"
      defaultValue={undefined}
      id="item"
      name="item"
      onBlur={[Function]}
      onFocus={[Function]}
      onInput={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseUp={[Function]}
      value={undefined}
    />
  </div>
</div>
`;

exports[`TextInput renders with complex suggestions 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c1 {
  padding: 11px;
  border: 1px solid rgba(0,0,0,0.15);
  border-radius: 4px;
  outline: none;
  background-color: transparent;
  color: inherit;
  font: inherit;
  margin: 0;
}

.c1::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c1::-moz-placeholder {
  color: #AAAAAA;
}

.c1:-ms-input-placeholder {
  color: #AAAAAA;
}

.c1::-moz-focus-inner {
  border: none;
  outline: none;
}

.c1:focus {
  border-color: #00CCEB;
  box-shadow: 0 0 1px 1px #00CCEB;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: #00CCEB solid 2px;
}

@media only screen and (min-width:481px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

<div
  className="c0"
>
  <div>
    <input
      autoComplete="off"
      className="c1"
      defaultValue={undefined}
      id="item"
      name="item"
      onBlur={[Function]}
      onFocus={[Function]}
      onInput={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseUp={[Function]}
      value={undefined}
    />
  </div>
</div>
`;

exports[`TextInput renders with suggestions 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c1 {
  padding: 11px;
  border: 1px solid rgba(0,0,0,0.15);
  border-radius: 4px;
  outline: none;
  background-color: transparent;
  color: inherit;
  font: inherit;
  margin: 0;
}

.c1::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c1::-moz-placeholder {
  color: #AAAAAA;
}

.c1:-ms-input-placeholder {
  color: #AAAAAA;
}

.c1::-moz-focus-inner {
  border: none;
  outline: none;
}

.c1:focus {
  border-color: #00CCEB;
  box-shadow: 0 0 1px 1px #00CCEB;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: #00CCEB solid 2px;
}

@media only screen and (min-width:481px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

<div
  className="c0"
>
  <div>
    <input
      autoComplete="off"
      className="c1"
      defaultValue={undefined}
      id="item"
      name="item"
      onBlur={[Function]}
      onFocus={[Function]}
      onInput={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseUp={[Function]}
      value={undefined}
    />
  </div>
</div>
`;

exports[`TextInput show suggestions on input change 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c1 {
  padding: 11px;
  border: 1px solid rgba(0,0,0,0.15);
  border-radius: 4px;
  outline: none;
  background-color: transparent;
  color: inherit;
  font: inherit;
  margin: 0;
}

.c1::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c1::-moz-placeholder {
  color: #AAAAAA;
}

.c1:-ms-input-placeholder {
  color: #AAAAAA;
}

.c1::-moz-focus-inner {
  border: none;
  outline: none;
}

.c1:focus {
  border-color: #00CCEB;
  box-shadow: 0 0 1px 1px #00CCEB;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: #00CCEB solid 2px;
}

@media only screen and (min-width:481px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

<div
  className="c0"
>
  <div>
    <input
      autoComplete="off"
      className="c1"
      defaultValue={undefined}
      id="item"
      name="item"
      onBlur={[Function]}
      onFocus={[Function]}
      onInput={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseUp={[Function]}
      value={undefined}
    />
  </div>
</div>
`;

exports[`TextInput show suggestions on input change 2`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #333333;
  background-color: #FFFFFF;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c0 * {
  box-sizing: inherit;
}

.c1 {
  padding: 11px;
  border: 1px solid rgba(0,0,0,0.15);
  border-radius: 4px;
  outline: none;
  background-color: transparent;
  color: inherit;
  font: inherit;
  margin: 0;
}

.c1::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c1::-moz-placeholder {
  color: #AAAAAA;
}

.c1:-ms-input-placeholder {
  color: #AAAAAA;
}

.c1::-moz-focus-inner {
  border: none;
  outline: none;
}

.c1:focus {
  border-color: #00CCEB;
  box-shadow: 0 0 1px 1px #00CCEB;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: #00CCEB solid 2px;
}

@media only screen and (min-width:481px) {
  .c0 {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    width: 100%;
    overflow: visible;
  }
}

<div
  className="c0"
>
  <div>
    <input
      autoComplete="off"
      className="c1"
      defaultValue={undefined}
      id="item"
      name="item"
      onBlur={[Function]}
      onFocus={[Function]}
      onInput={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseUp={[Function]}
      value={undefined}
    />
    <span
      style={
        Object {
          "display": "none",
        }
      }
    />
  </div>
</div>
`;
