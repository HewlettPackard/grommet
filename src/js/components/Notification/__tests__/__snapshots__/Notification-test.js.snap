// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Notification position bottom 1`] = `
.c5 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #CCCCCC;
  stroke: #CCCCCC;
}

.c5 g {
  fill: inherit;
  stroke: inherit;
}

.c5 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c5 *[stroke*="#"],
.c5 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c5 *[fill-rule],
.c5 *[FILL-RULE],
.c5 *[fill*="#"],
.c5 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  background-color: rgba(255,255,255,1);
  color: #444444;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  width: 384px;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
  border-radius: 6px;
  box-shadow: 0px 4px 8px rgba(0,0,0,0.20);
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-right: 12px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c8 {
  font-size: 18px;
  line-height: 24px;
  font-weight: bold;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background: transparent;
  position: relative;
  z-index: 20;
  pointer-events: none;
  outline: none;
  position: fixed;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 48px;
  outline: none;
  pointer-events: all;
  z-index: 20;
  position: fixed;
  max-height: calc(100% - 24px - 24px);
  max-width: calc(100% - 24px - 24px);
  border-radius: 0;
  bottom: 24px;
  left: 50%;
  -webkit-transform: translate(-50%,0);
  -ms-transform: translate(-50%,0);
  transform: translate(-50%,0);
  -webkit-animation: fdqiZe 0.2s ease-in-out forwards;
  animation: fdqiZe 0.2s ease-in-out forwards;
}

.c2 {
  width: 0;
  height: 0;
  overflow: hidden;
  position: absolute;
}

.c9 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
  max-width: 432px;
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-left: 6px;
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    border-radius: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c4 {
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c0 {
    position: fixed;
    width: 100%;
    height: 100%;
    min-height: 100vh;
  }
}

@media only screen and (max-width:768px) {
  .c1 {
    position: relative;
    max-height: none;
    max-width: none;
    border-radius: 0;
    height: 100vh;
    width: 100vw;
  }
}

<div
  class="c0"
  id="position-test"
  tabindex="-1"
>
  <div
    class="c1"
    data-g-portal-id="0"
    id="position-test"
    role="log"
  >
    <a
      aria-hidden="true"
      class="c2"
      tabindex="-1"
    />
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <svg
          aria-label="Status is unknown"
          class="c5"
          viewBox="0 0 12 12"
        >
          <rect
            fill-rule="evenodd"
            height="10"
            rx="1"
            stroke="#000"
            width="10"
            x="1"
            y="1"
          />
        </svg>
      </div>
      <div
        class="c6"
      >
        <div
          class="c7"
        >
          <span
            class="c8"
          >
            title
          </span>
          <p
            class="c9"
          >
            message
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Notification position bottom 2`] = `
"@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-left: 6px;
    padding-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}
@media only screen and (max-width: 768px) {
  .kHzrGI {
    padding-right: 6px;
  }
}"
`;

exports[`Notification position bottom-left 1`] = `
.c5 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #CCCCCC;
  stroke: #CCCCCC;
}

.c5 g {
  fill: inherit;
  stroke: inherit;
}

.c5 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c5 *[stroke*="#"],
.c5 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c5 *[fill-rule],
.c5 *[FILL-RULE],
.c5 *[fill*="#"],
.c5 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  background-color: rgba(255,255,255,1);
  color: #444444;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  width: 384px;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
  border-radius: 6px;
  box-shadow: 0px 4px 8px rgba(0,0,0,0.20);
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-right: 12px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c8 {
  font-size: 18px;
  line-height: 24px;
  font-weight: bold;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background: transparent;
  position: relative;
  z-index: 20;
  pointer-events: none;
  outline: none;
  position: fixed;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 48px;
  outline: none;
  pointer-events: all;
  z-index: 20;
  position: fixed;
  max-height: calc(100% - 24px - 24px);
  max-width: calc(100% - 24px - 24px);
  border-radius: 0;
  bottom: 24px;
  left: 24px;
  -webkit-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-animation: cQwfQi 0.2s ease-in-out forwards;
  animation: cQwfQi 0.2s ease-in-out forwards;
}

.c2 {
  width: 0;
  height: 0;
  overflow: hidden;
  position: absolute;
}

.c9 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
  max-width: 432px;
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-left: 6px;
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    border-radius: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c4 {
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c0 {
    position: fixed;
    width: 100%;
    height: 100%;
    min-height: 100vh;
  }
}

@media only screen and (max-width:768px) {
  .c1 {
    position: relative;
    max-height: none;
    max-width: none;
    border-radius: 0;
    height: 100vh;
    width: 100vw;
  }
}

<div
  class="c0"
  id="position-test"
  tabindex="-1"
>
  <div
    class="c1"
    data-g-portal-id="0"
    id="position-test"
    role="log"
  >
    <a
      aria-hidden="true"
      class="c2"
      tabindex="-1"
    />
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <svg
          aria-label="Status is unknown"
          class="c5"
          viewBox="0 0 12 12"
        >
          <rect
            fill-rule="evenodd"
            height="10"
            rx="1"
            stroke="#000"
            width="10"
            x="1"
            y="1"
          />
        </svg>
      </div>
      <div
        class="c6"
      >
        <div
          class="c7"
        >
          <span
            class="c8"
          >
            title
          </span>
          <p
            class="c9"
          >
            message
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Notification position bottom-left 2`] = `
"@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-left: 6px;
    padding-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}
@media only screen and (max-width: 768px) {
  .kHzrGI {
    padding-right: 6px;
  }
}"
`;

exports[`Notification position bottom-right 1`] = `
.c5 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #CCCCCC;
  stroke: #CCCCCC;
}

.c5 g {
  fill: inherit;
  stroke: inherit;
}

.c5 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c5 *[stroke*="#"],
.c5 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c5 *[fill-rule],
.c5 *[FILL-RULE],
.c5 *[fill*="#"],
.c5 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  background-color: rgba(255,255,255,1);
  color: #444444;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  width: 384px;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
  border-radius: 6px;
  box-shadow: 0px 4px 8px rgba(0,0,0,0.20);
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-right: 12px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c8 {
  font-size: 18px;
  line-height: 24px;
  font-weight: bold;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background: transparent;
  position: relative;
  z-index: 20;
  pointer-events: none;
  outline: none;
  position: fixed;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 48px;
  outline: none;
  pointer-events: all;
  z-index: 20;
  position: fixed;
  max-height: calc(100% - 24px - 24px);
  max-width: calc(100% - 24px - 24px);
  border-radius: 0;
  bottom: 24px;
  right: 24px;
  -webkit-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-animation: cQwfQi 0.2s ease-in-out forwards;
  animation: cQwfQi 0.2s ease-in-out forwards;
}

.c2 {
  width: 0;
  height: 0;
  overflow: hidden;
  position: absolute;
}

.c9 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
  max-width: 432px;
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-left: 6px;
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    border-radius: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c4 {
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c0 {
    position: fixed;
    width: 100%;
    height: 100%;
    min-height: 100vh;
  }
}

@media only screen and (max-width:768px) {
  .c1 {
    position: relative;
    max-height: none;
    max-width: none;
    border-radius: 0;
    height: 100vh;
    width: 100vw;
  }
}

<div
  class="c0"
  id="position-test"
  tabindex="-1"
>
  <div
    class="c1"
    data-g-portal-id="0"
    id="position-test"
    role="log"
  >
    <a
      aria-hidden="true"
      class="c2"
      tabindex="-1"
    />
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <svg
          aria-label="Status is unknown"
          class="c5"
          viewBox="0 0 12 12"
        >
          <rect
            fill-rule="evenodd"
            height="10"
            rx="1"
            stroke="#000"
            width="10"
            x="1"
            y="1"
          />
        </svg>
      </div>
      <div
        class="c6"
      >
        <div
          class="c7"
        >
          <span
            class="c8"
          >
            title
          </span>
          <p
            class="c9"
          >
            message
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Notification position bottom-right 2`] = `
"@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-left: 6px;
    padding-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}
@media only screen and (max-width: 768px) {
  .kHzrGI {
    padding-right: 6px;
  }
}"
`;

exports[`Notification position center 1`] = `
.c5 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #CCCCCC;
  stroke: #CCCCCC;
}

.c5 g {
  fill: inherit;
  stroke: inherit;
}

.c5 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c5 *[stroke*="#"],
.c5 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c5 *[fill-rule],
.c5 *[FILL-RULE],
.c5 *[fill*="#"],
.c5 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  background-color: rgba(255,255,255,1);
  color: #444444;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  width: 384px;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
  border-radius: 6px;
  box-shadow: 0px 4px 8px rgba(0,0,0,0.20);
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-right: 12px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c8 {
  font-size: 18px;
  line-height: 24px;
  font-weight: bold;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background: transparent;
  position: relative;
  z-index: 20;
  pointer-events: none;
  outline: none;
  position: fixed;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 48px;
  outline: none;
  pointer-events: all;
  z-index: 20;
  position: fixed;
  max-height: calc(100% - 24px - 24px);
  max-width: calc(100% - 24px - 24px);
  border-radius: 0;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  -webkit-animation: hWAzxx 0.2s ease-in-out forwards;
  animation: hWAzxx 0.2s ease-in-out forwards;
}

.c2 {
  width: 0;
  height: 0;
  overflow: hidden;
  position: absolute;
}

.c9 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
  max-width: 432px;
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-left: 6px;
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    border-radius: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c4 {
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c0 {
    position: fixed;
    width: 100%;
    height: 100%;
    min-height: 100vh;
  }
}

@media only screen and (max-width:768px) {
  .c1 {
    position: relative;
    max-height: none;
    max-width: none;
    border-radius: 0;
    height: 100vh;
    width: 100vw;
  }
}

<div
  class="c0"
  id="position-test"
  tabindex="-1"
>
  <div
    class="c1"
    data-g-portal-id="0"
    id="position-test"
    role="log"
  >
    <a
      aria-hidden="true"
      class="c2"
      tabindex="-1"
    />
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <svg
          aria-label="Status is unknown"
          class="c5"
          viewBox="0 0 12 12"
        >
          <rect
            fill-rule="evenodd"
            height="10"
            rx="1"
            stroke="#000"
            width="10"
            x="1"
            y="1"
          />
        </svg>
      </div>
      <div
        class="c6"
      >
        <div
          class="c7"
        >
          <span
            class="c8"
          >
            title
          </span>
          <p
            class="c9"
          >
            message
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Notification position center 2`] = `
"@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-left: 6px;
    padding-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}
@media only screen and (max-width: 768px) {
  .kHzrGI {
    padding-right: 6px;
  }
}"
`;

exports[`Notification position end 1`] = `
.c5 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #CCCCCC;
  stroke: #CCCCCC;
}

.c5 g {
  fill: inherit;
  stroke: inherit;
}

.c5 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c5 *[stroke*="#"],
.c5 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c5 *[fill-rule],
.c5 *[FILL-RULE],
.c5 *[fill*="#"],
.c5 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  background-color: rgba(255,255,255,1);
  color: #444444;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  width: 384px;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
  border-radius: 6px;
  box-shadow: 0px 4px 8px rgba(0,0,0,0.20);
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-right: 12px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c8 {
  font-size: 18px;
  line-height: 24px;
  font-weight: bold;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background: transparent;
  position: relative;
  z-index: 20;
  pointer-events: none;
  outline: none;
  position: fixed;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 48px;
  outline: none;
  pointer-events: all;
  z-index: 20;
  position: fixed;
  max-height: calc(100% - 24px - 24px);
  max-width: calc(100% - 24px - 24px);
  border-radius: 0;
  inset-inline-end: 24px;
  top: 50%;
  -webkit-transform: translate(0,-50%);
  -ms-transform: translate(0,-50%);
  transform: translate(0,-50%);
  -webkit-animation: drjPPC 0.2s ease-in-out forwards;
  animation: drjPPC 0.2s ease-in-out forwards;
}

.c2 {
  width: 0;
  height: 0;
  overflow: hidden;
  position: absolute;
}

.c9 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
  max-width: 432px;
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-left: 6px;
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    border-radius: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c4 {
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c0 {
    position: fixed;
    width: 100%;
    height: 100%;
    min-height: 100vh;
  }
}

@media only screen and (max-width:768px) {
  .c1 {
    position: relative;
    max-height: none;
    max-width: none;
    border-radius: 0;
    height: 100vh;
    width: 100vw;
  }
}

<div
  class="c0"
  id="position-test"
  tabindex="-1"
>
  <div
    class="c1"
    data-g-portal-id="0"
    id="position-test"
    role="log"
  >
    <a
      aria-hidden="true"
      class="c2"
      tabindex="-1"
    />
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <svg
          aria-label="Status is unknown"
          class="c5"
          viewBox="0 0 12 12"
        >
          <rect
            fill-rule="evenodd"
            height="10"
            rx="1"
            stroke="#000"
            width="10"
            x="1"
            y="1"
          />
        </svg>
      </div>
      <div
        class="c6"
      >
        <div
          class="c7"
        >
          <span
            class="c8"
          >
            title
          </span>
          <p
            class="c9"
          >
            message
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Notification position end 2`] = `
"@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-left: 6px;
    padding-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}
@media only screen and (max-width: 768px) {
  .kHzrGI {
    padding-right: 6px;
  }
}"
`;

exports[`Notification position left 1`] = `
.c5 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #CCCCCC;
  stroke: #CCCCCC;
}

.c5 g {
  fill: inherit;
  stroke: inherit;
}

.c5 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c5 *[stroke*="#"],
.c5 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c5 *[fill-rule],
.c5 *[FILL-RULE],
.c5 *[fill*="#"],
.c5 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  background-color: rgba(255,255,255,1);
  color: #444444;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  width: 384px;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
  border-radius: 6px;
  box-shadow: 0px 4px 8px rgba(0,0,0,0.20);
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-right: 12px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c8 {
  font-size: 18px;
  line-height: 24px;
  font-weight: bold;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background: transparent;
  position: relative;
  z-index: 20;
  pointer-events: none;
  outline: none;
  position: fixed;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 48px;
  outline: none;
  pointer-events: all;
  z-index: 20;
  position: fixed;
  max-height: calc(100% - 24px - 24px);
  max-width: calc(100% - 24px - 24px);
  border-radius: 0;
  left: 24px;
  top: 50%;
  -webkit-transform: translate(0,-50%);
  -ms-transform: translate(0,-50%);
  transform: translate(0,-50%);
  -webkit-animation: kPYden 0.2s ease-in-out forwards;
  animation: kPYden 0.2s ease-in-out forwards;
}

.c2 {
  width: 0;
  height: 0;
  overflow: hidden;
  position: absolute;
}

.c9 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
  max-width: 432px;
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-left: 6px;
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    border-radius: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c4 {
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c0 {
    position: fixed;
    width: 100%;
    height: 100%;
    min-height: 100vh;
  }
}

@media only screen and (max-width:768px) {
  .c1 {
    position: relative;
    max-height: none;
    max-width: none;
    border-radius: 0;
    height: 100vh;
    width: 100vw;
  }
}

<div
  class="c0"
  id="position-test"
  tabindex="-1"
>
  <div
    class="c1"
    data-g-portal-id="0"
    id="position-test"
    role="log"
  >
    <a
      aria-hidden="true"
      class="c2"
      tabindex="-1"
    />
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <svg
          aria-label="Status is unknown"
          class="c5"
          viewBox="0 0 12 12"
        >
          <rect
            fill-rule="evenodd"
            height="10"
            rx="1"
            stroke="#000"
            width="10"
            x="1"
            y="1"
          />
        </svg>
      </div>
      <div
        class="c6"
      >
        <div
          class="c7"
        >
          <span
            class="c8"
          >
            title
          </span>
          <p
            class="c9"
          >
            message
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Notification position left 2`] = `
"@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-left: 6px;
    padding-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}
@media only screen and (max-width: 768px) {
  .kHzrGI {
    padding-right: 6px;
  }
}"
`;

exports[`Notification position right 1`] = `
.c5 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #CCCCCC;
  stroke: #CCCCCC;
}

.c5 g {
  fill: inherit;
  stroke: inherit;
}

.c5 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c5 *[stroke*="#"],
.c5 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c5 *[fill-rule],
.c5 *[FILL-RULE],
.c5 *[fill*="#"],
.c5 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  background-color: rgba(255,255,255,1);
  color: #444444;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  width: 384px;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
  border-radius: 6px;
  box-shadow: 0px 4px 8px rgba(0,0,0,0.20);
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-right: 12px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c8 {
  font-size: 18px;
  line-height: 24px;
  font-weight: bold;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background: transparent;
  position: relative;
  z-index: 20;
  pointer-events: none;
  outline: none;
  position: fixed;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 48px;
  outline: none;
  pointer-events: all;
  z-index: 20;
  position: fixed;
  max-height: calc(100% - 24px - 24px);
  max-width: calc(100% - 24px - 24px);
  border-radius: 0;
  right: 24px;
  top: 50%;
  -webkit-transform: translate(0,-50%);
  -ms-transform: translate(0,-50%);
  transform: translate(0,-50%);
  -webkit-animation: drjPPC 0.2s ease-in-out forwards;
  animation: drjPPC 0.2s ease-in-out forwards;
}

.c2 {
  width: 0;
  height: 0;
  overflow: hidden;
  position: absolute;
}

.c9 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
  max-width: 432px;
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-left: 6px;
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    border-radius: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c4 {
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c0 {
    position: fixed;
    width: 100%;
    height: 100%;
    min-height: 100vh;
  }
}

@media only screen and (max-width:768px) {
  .c1 {
    position: relative;
    max-height: none;
    max-width: none;
    border-radius: 0;
    height: 100vh;
    width: 100vw;
  }
}

<div
  class="c0"
  id="position-test"
  tabindex="-1"
>
  <div
    class="c1"
    data-g-portal-id="0"
    id="position-test"
    role="log"
  >
    <a
      aria-hidden="true"
      class="c2"
      tabindex="-1"
    />
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <svg
          aria-label="Status is unknown"
          class="c5"
          viewBox="0 0 12 12"
        >
          <rect
            fill-rule="evenodd"
            height="10"
            rx="1"
            stroke="#000"
            width="10"
            x="1"
            y="1"
          />
        </svg>
      </div>
      <div
        class="c6"
      >
        <div
          class="c7"
        >
          <span
            class="c8"
          >
            title
          </span>
          <p
            class="c9"
          >
            message
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Notification position right 2`] = `
"@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-left: 6px;
    padding-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}
@media only screen and (max-width: 768px) {
  .kHzrGI {
    padding-right: 6px;
  }
}"
`;

exports[`Notification position start 1`] = `
.c5 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #CCCCCC;
  stroke: #CCCCCC;
}

.c5 g {
  fill: inherit;
  stroke: inherit;
}

.c5 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c5 *[stroke*="#"],
.c5 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c5 *[fill-rule],
.c5 *[FILL-RULE],
.c5 *[fill*="#"],
.c5 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  background-color: rgba(255,255,255,1);
  color: #444444;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  width: 384px;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
  border-radius: 6px;
  box-shadow: 0px 4px 8px rgba(0,0,0,0.20);
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-right: 12px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c8 {
  font-size: 18px;
  line-height: 24px;
  font-weight: bold;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background: transparent;
  position: relative;
  z-index: 20;
  pointer-events: none;
  outline: none;
  position: fixed;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 48px;
  outline: none;
  pointer-events: all;
  z-index: 20;
  position: fixed;
  max-height: calc(100% - 24px - 24px);
  max-width: calc(100% - 24px - 24px);
  border-radius: 0;
  inset-inline-start: 24px;
  top: 50%;
  -webkit-transform: translate(0,-50%);
  -ms-transform: translate(0,-50%);
  transform: translate(0,-50%);
  -webkit-animation: kPYden 0.2s ease-in-out forwards;
  animation: kPYden 0.2s ease-in-out forwards;
}

.c2 {
  width: 0;
  height: 0;
  overflow: hidden;
  position: absolute;
}

.c9 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
  max-width: 432px;
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-left: 6px;
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    border-radius: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c4 {
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c0 {
    position: fixed;
    width: 100%;
    height: 100%;
    min-height: 100vh;
  }
}

@media only screen and (max-width:768px) {
  .c1 {
    position: relative;
    max-height: none;
    max-width: none;
    border-radius: 0;
    height: 100vh;
    width: 100vw;
  }
}

<div
  class="c0"
  id="position-test"
  tabindex="-1"
>
  <div
    class="c1"
    data-g-portal-id="0"
    id="position-test"
    role="log"
  >
    <a
      aria-hidden="true"
      class="c2"
      tabindex="-1"
    />
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <svg
          aria-label="Status is unknown"
          class="c5"
          viewBox="0 0 12 12"
        >
          <rect
            fill-rule="evenodd"
            height="10"
            rx="1"
            stroke="#000"
            width="10"
            x="1"
            y="1"
          />
        </svg>
      </div>
      <div
        class="c6"
      >
        <div
          class="c7"
        >
          <span
            class="c8"
          >
            title
          </span>
          <p
            class="c9"
          >
            message
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Notification position start 2`] = `
"@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-left: 6px;
    padding-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}
@media only screen and (max-width: 768px) {
  .kHzrGI {
    padding-right: 6px;
  }
}"
`;

exports[`Notification position top 1`] = `
.c5 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #CCCCCC;
  stroke: #CCCCCC;
}

.c5 g {
  fill: inherit;
  stroke: inherit;
}

.c5 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c5 *[stroke*="#"],
.c5 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c5 *[fill-rule],
.c5 *[FILL-RULE],
.c5 *[fill*="#"],
.c5 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  background-color: rgba(255,255,255,1);
  color: #444444;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  width: 384px;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
  border-radius: 6px;
  box-shadow: 0px 4px 8px rgba(0,0,0,0.20);
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-right: 12px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c8 {
  font-size: 18px;
  line-height: 24px;
  font-weight: bold;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background: transparent;
  position: relative;
  z-index: 20;
  pointer-events: none;
  outline: none;
  position: fixed;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 48px;
  outline: none;
  pointer-events: all;
  z-index: 20;
  position: fixed;
  max-height: calc(100% - 24px - 24px);
  max-width: calc(100% - 24px - 24px);
  border-radius: 0;
  top: 24px;
  left: 50%;
  -webkit-transform: translate(-50%,0);
  -ms-transform: translate(-50%,0);
  transform: translate(-50%,0);
  -webkit-animation: hnDkLj 0.2s ease-in-out forwards;
  animation: hnDkLj 0.2s ease-in-out forwards;
}

.c2 {
  width: 0;
  height: 0;
  overflow: hidden;
  position: absolute;
}

.c9 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
  max-width: 432px;
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-left: 6px;
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    border-radius: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c4 {
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c0 {
    position: fixed;
    width: 100%;
    height: 100%;
    min-height: 100vh;
  }
}

@media only screen and (max-width:768px) {
  .c1 {
    position: relative;
    max-height: none;
    max-width: none;
    border-radius: 0;
    height: 100vh;
    width: 100vw;
  }
}

<div
  class="c0"
  id="position-test"
  tabindex="-1"
>
  <div
    class="c1"
    data-g-portal-id="0"
    id="position-test"
    role="log"
  >
    <a
      aria-hidden="true"
      class="c2"
      tabindex="-1"
    />
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <svg
          aria-label="Status is unknown"
          class="c5"
          viewBox="0 0 12 12"
        >
          <rect
            fill-rule="evenodd"
            height="10"
            rx="1"
            stroke="#000"
            width="10"
            x="1"
            y="1"
          />
        </svg>
      </div>
      <div
        class="c6"
      >
        <div
          class="c7"
        >
          <span
            class="c8"
          >
            title
          </span>
          <p
            class="c9"
          >
            message
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Notification position top 2`] = `
"@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-left: 6px;
    padding-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}
@media only screen and (max-width: 768px) {
  .kHzrGI {
    padding-right: 6px;
  }
}"
`;

exports[`Notification position top-left 1`] = `
.c5 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #CCCCCC;
  stroke: #CCCCCC;
}

.c5 g {
  fill: inherit;
  stroke: inherit;
}

.c5 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c5 *[stroke*="#"],
.c5 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c5 *[fill-rule],
.c5 *[FILL-RULE],
.c5 *[fill*="#"],
.c5 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  background-color: rgba(255,255,255,1);
  color: #444444;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  width: 384px;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
  border-radius: 6px;
  box-shadow: 0px 4px 8px rgba(0,0,0,0.20);
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-right: 12px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c8 {
  font-size: 18px;
  line-height: 24px;
  font-weight: bold;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background: transparent;
  position: relative;
  z-index: 20;
  pointer-events: none;
  outline: none;
  position: fixed;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 48px;
  outline: none;
  pointer-events: all;
  z-index: 20;
  position: fixed;
  max-height: calc(100% - 24px - 24px);
  max-width: calc(100% - 24px - 24px);
  border-radius: 0;
  top: 24px;
  left: 24px;
  -webkit-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-animation: ffftsv 0.2s ease-in-out forwards;
  animation: ffftsv 0.2s ease-in-out forwards;
}

.c2 {
  width: 0;
  height: 0;
  overflow: hidden;
  position: absolute;
}

.c9 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
  max-width: 432px;
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-left: 6px;
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    border-radius: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c4 {
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c0 {
    position: fixed;
    width: 100%;
    height: 100%;
    min-height: 100vh;
  }
}

@media only screen and (max-width:768px) {
  .c1 {
    position: relative;
    max-height: none;
    max-width: none;
    border-radius: 0;
    height: 100vh;
    width: 100vw;
  }
}

<div
  class="c0"
  id="position-test"
  tabindex="-1"
>
  <div
    class="c1"
    data-g-portal-id="0"
    id="position-test"
    role="log"
  >
    <a
      aria-hidden="true"
      class="c2"
      tabindex="-1"
    />
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <svg
          aria-label="Status is unknown"
          class="c5"
          viewBox="0 0 12 12"
        >
          <rect
            fill-rule="evenodd"
            height="10"
            rx="1"
            stroke="#000"
            width="10"
            x="1"
            y="1"
          />
        </svg>
      </div>
      <div
        class="c6"
      >
        <div
          class="c7"
        >
          <span
            class="c8"
          >
            title
          </span>
          <p
            class="c9"
          >
            message
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Notification position top-left 2`] = `
"@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-left: 6px;
    padding-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}
@media only screen and (max-width: 768px) {
  .kHzrGI {
    padding-right: 6px;
  }
}"
`;

exports[`Notification position top-right 1`] = `
.c5 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #CCCCCC;
  stroke: #CCCCCC;
}

.c5 g {
  fill: inherit;
  stroke: inherit;
}

.c5 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c5 *[stroke*="#"],
.c5 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c5 *[fill-rule],
.c5 *[FILL-RULE],
.c5 *[fill*="#"],
.c5 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  background-color: rgba(255,255,255,1);
  color: #444444;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  width: 384px;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
  border-radius: 6px;
  box-shadow: 0px 4px 8px rgba(0,0,0,0.20);
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-right: 12px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c8 {
  font-size: 18px;
  line-height: 24px;
  font-weight: bold;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background: transparent;
  position: relative;
  z-index: 20;
  pointer-events: none;
  outline: none;
  position: fixed;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 48px;
  outline: none;
  pointer-events: all;
  z-index: 20;
  position: fixed;
  max-height: calc(100% - 24px - 24px);
  max-width: calc(100% - 24px - 24px);
  border-radius: 0;
  top: 24px;
  right: 24px;
  -webkit-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-animation: ffftsv 0.2s ease-in-out forwards;
  animation: ffftsv 0.2s ease-in-out forwards;
}

.c2 {
  width: 0;
  height: 0;
  overflow: hidden;
  position: absolute;
}

.c9 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
  max-width: 432px;
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-left: 6px;
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c3 {
    border-radius: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c4 {
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c0 {
    position: fixed;
    width: 100%;
    height: 100%;
    min-height: 100vh;
  }
}

@media only screen and (max-width:768px) {
  .c1 {
    position: relative;
    max-height: none;
    max-width: none;
    border-radius: 0;
    height: 100vh;
    width: 100vw;
  }
}

<div
  class="c0"
  id="position-test"
  tabindex="-1"
>
  <div
    class="c1"
    data-g-portal-id="0"
    id="position-test"
    role="log"
  >
    <a
      aria-hidden="true"
      class="c2"
      tabindex="-1"
    />
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <svg
          aria-label="Status is unknown"
          class="c5"
          viewBox="0 0 12 12"
        >
          <rect
            fill-rule="evenodd"
            height="10"
            rx="1"
            stroke="#000"
            width="10"
            x="1"
            y="1"
          />
        </svg>
      </div>
      <div
        class="c6"
      >
        <div
          class="c7"
        >
          <span
            class="c8"
          >
            title
          </span>
          <p
            class="c9"
          >
            message
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Notification position top-right 2`] = `
"@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-left: 6px;
    padding-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .pKfDt {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}
@media only screen and (max-width: 768px) {
  .kHzrGI {
    padding-right: 6px;
  }
}"
`;

exports[`Notification should have no accessibility violations 1`] = `
<DocumentFragment>
  .c3 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #CCCCCC;
  stroke: #CCCCCC;
}

.c3 g {
  fill: inherit;
  stroke: inherit;
}

.c3 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c3 *[stroke*="#"],
.c3 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c3 *[fill-rule],
.c3 *[FILL-RULE],
.c3 *[fill*="#"],
.c3 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  background-color: rgba(255,255,255,1);
  color: #444444;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-right: 12px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c6 {
  font-size: 18px;
  line-height: 24px;
  font-weight: bold;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width:768px) {
  .c1 {
    padding-left: 6px;
    padding-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c1 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c2 {
    padding-right: 6px;
  }
}

<div
    class="c0"
  >
    <div
      class="c1"
    >
      <div
        class="c2"
      >
        <svg
          aria-label="Status is unknown"
          class="c3"
          viewBox="0 0 12 12"
        >
          <rect
            fill-rule="evenodd"
            height="10"
            rx="1"
            stroke="#000"
            width="10"
            x="1"
            y="1"
          />
        </svg>
      </div>
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <span
            class="c6"
          >
            title
          </span>
        </div>
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`Notification should have no accessibility violations for toast 1`] = `
<DocumentFragment>
  .c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {

}

<div
    aria-hidden="true"
    class="c0"
  />
</DocumentFragment>
`;
